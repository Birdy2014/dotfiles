#!/usr/bin/env bash

set -eo pipefail

trap "exit" INT

pkglist=(
    # terminal
    "kitty"
    "fish"

    # desktop
    "sway"
    "swayidle"
    "swaylock"
    "xorg-xwayland"
    "waybar"
    "rofi"
    "pipewire"
    "pipewire-pulse"
    "pipewire-alsa"
    "dunst"
    "wl-clipboard"

    # other applications
    "neovim"
    "firefox"
    "lf"
    "zathura"
    "zathura-pdf-mupdf"
    "git"
    "sudo"
    "clang"
    "highlight"
    "ripgrep"
    "imv"
)

aurpkgs=(
    "nerd-fonts-jetbrains-mono"
)

install_git() {
    [ ! -e "/usr/bin/git" ] && {
        echo "Installing git..."
        sudo pacman -S git
    }
}

install_packages() {
    [ "$EUID" -eq 0 ] && echo "Don't run this script as root" && exit 1
    [ ! -e "/usr/bin/sudo" ] && echo "please install sudo" && exit 1

    echo "Updating system..."
    sudo pacman -Syu --noconfirm

    [ ! -e "/usr/bin/yay" ] && {
        echo "Installing yay..."
        git clone https://aur.archlinux.org/yay.git /tmp/yay
        cd /tmp/yay
        makepkg -si --noconfirm && cd ..&& rm -rf ./yay
    }

    # install packages
    echo "Installing pacman packages..."
    sudo pacman --noconfirm --needed -S ${pkglist[*]}

    echo "Installing AUR packages..."
    for pkgname in $aurpkgs; do
        pacman -Qi $pkgname > /dev/null || yay --noconfirm -S $pkgname
    done
}

setup_dotfiles() {
    git clone --bare https://github.com/Birdy2014/dotfiles.git $HOME/.dotfiles
    git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME checkout
}

case $1 in
    setup)
        install_git
        [ -d "$HOME/.dotfiles" ] && git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME pull || setup_dotfiles
        install_packages
        ;;
    *)
        echo "Run $0 setup"
esac
