#!/usr/bin/bash

# use bash builtin sleep
if [ -f /usr/lib/bash/sleep ]; then
    enable -f /usr/lib/bash/sleep sleep
    SLEEP='builtin sleep'
else
    SLEEP='sleep'
fi

CACHEDIR=${XDG_RUNTIME_DIR:-/tmp}/scripts/dwm-statusbar
mkdir -p $CACHEDIR

get_time() {
    echo "$(date "+%a %d %b %H:%M")"
}

get_volume() {
    if [ $(pamixer --get-mute) = true ]; then
        echo "üîà"
    else
        echo "üîä $(pamixer --get-volume)"
    fi
}

get_battery() {
    BATTERY_STATUS=$(cat /sys/class/power_supply/BAT?/status)
    BATTERY_CHARGE=$(cat /sys/class/power_supply/BAT?/capacity)
    if [ $BATTERY_STATUS = Discharging ]; then
        if [ $BATTERY_CHARGE -lt 10 ]; then
            echo "ÔâÑ  $BATTERY_CHARGE"
        elif [ $BATTERY_CHARGE -lt 25 ]; then
            echo "ÔâÉ  $BATTERY_CHARGE"
        elif [ $BATTERY_CHARGE -lt 50 ]; then
            echo "ÔâÇ  $BATTERY_CHARGE"
        elif [ $BATTERY_CHARGE -lt 75 ]; then
            echo "ÔâÅ  $BATTERY_CHARGE"
        else
            echo "ÔâÄ  $BATTERY_CHARGE"
        fi
    elif [ $BATTERY_STATUS = Charging ]; then
        echo "Ôá¶ $BATTERY_CHARGE"
    else
        echo "ERR"
    fi
}

get_connections() {
    local connections="$(nmcli -g type,name connection show --active)"
    local wifi=$(echo "$connections" | awk -F : '$1 ~ /wifi/ {print $2}')
    local ethernet=$(echo "$connections" | awk -F : '$1 ~ /ethernet/ {print "Connected"}')
    local vpn=$(echo "$connections" | awk -F : '$1 ~ /vpn/ {print $2}')
    local out
    for i in wifi ethernet vpn; do
        [ -z "${!i}" ] || out="$out | $i: ${!i}"
    done
    [ -z "$out" ] && echo 'Not Connected' || echo ${out:2}
}

update_network() {
    local sum=0
    for arg; do
        read -r i < "$arg"
        sum=$(( sum + i ))
    done
    local time=$(date +%s)
    local cache=$CACHEDIR/${1##*/}
    local oldsum=$(sed -n 1p $cache)
    local oldtime=$(sed -n 2p $cache)
    printf '%d\n%d' $sum $time > $cache
    printf '%dk' $(( ( (sum - oldsum) / (time - oldtime) ) / 1042 ))
}

get_network() {
    local rx=$(update_network /sys/class/net/*/statistics/rx_bytes)
    local tx=$(update_network /sys/class/net/*/statistics/tx_bytes)
    echo "üîª $rx üî∫ $tx"
}

update_statusbar() {
    xsetroot -name "$(get_connections) | $(get_network) | $(get_battery) | $(get_volume) | $(get_time)"
}

loop() {
    while true; do
        update_statusbar
        $SLEEP 5
    done
}

case $1 in
    refresh) update_statusbar;;
    start) [ -f $CACHEDIR/pidfile ] && ps $(< $CACHEDIR/pidfile) > /dev/null && echo "dwm-statusbar is already running" || (loop & echo $! > $CACHEDIR/pidfile);;
    stop) [ -f $CACHEDIR/pidfile ] && (kill $(< $CACHEDIR/pidfile); rm $CACHEDIR/pidfile) || echo "dwm-statusbar is not running";;
esac
